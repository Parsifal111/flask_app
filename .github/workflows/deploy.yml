name: Deploy to Minikube

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        # Клонируем репозиторий для получения всех исходных файлов

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        # Логинимся в Docker Hub для пуша Docker образа

      - name: Build Docker image
        run: |
          docker build -t blackcat34/flask_app:1.0.0 .
        # Сборка Docker-образа с тегом

      - name: Push Docker image
        run: |
          docker push blackcat34/flask_app:1.0.0
        # Пушим образ в Docker Hub

      - name: Install Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo mv minikube /usr/local/bin
          sudo chmod +x /usr/local/bin/minikube
        # Устанавливаем Minikube

      - name: Start Minikube
        run: |
          minikube start --driver=docker
        # Запускаем Minikube в Docker (если используете Minikube в Docker)

      - name: Setup kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
        # Устанавливаем kubectl для взаимодействия с Kubernetes

      - name: Set Minikube context for kubectl
        run: |
          kubectl config use-context minikube
        # Настроим kubectl для работы с Minikube

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/
        # Применяем манифесты для деплоя приложения

      - name: Wait for deployment to complete
        run: |
          kubectl rollout status deployment flask-app --timeout=300s
        # Ожидаем завершения деплоя приложения

      - name: Restart application
        run: |
          kubectl rollout restart deployment flask-app
        # Перезапускаем приложение после деплоя
