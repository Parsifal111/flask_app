name: Deploy to Server and Docker Hub

on:
  push:
    branches:
      - main
      - Ansible

jobs:
  deploy:
    runs-on: self-hosted  # Используем стандартную Ubuntu машину для выполнения задачи

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        # Клонируем репозиторий для получения всех исходных файлов

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        # Логинимся в Docker Hub для пуша Docker образа

      - name: Build Docker image
        run: |
          docker build -t blackcat34/flask_app:1.0.0 .
        # Сборка Docker-образа с тегом

      - name: Push Docker image to Docker Hub
        run: |
          docker push blackcat34/flask_app:1.0.0
        # Пушим образ в Docker Hub

      - name: Install Ansible
        run: |
          sudo apt install -y ansible
        # Устанавливаем Ansible

      - name: Run Ansible playbook to deploy the app
        run: |
          ansible-playbook -i inventory.ini playbook.yml
        # Запускаем Ansible playbook для деплоя приложения на сервер
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
        
      - name: Install Minikube (if needed for Kubernetes deployment)
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo mv minikube /usr/local/bin
          sudo chmod +x /usr/local/bin/minikube
        # Устанавливаем Minikube (если нужно для развертывания в Kubernetes)

      - name: Start Minikube (if needed for Kubernetes deployment)
        run: |
          minikube start --driver=docker
        # Запускаем Minikube в Docker (если используете Minikube для Kubernetes)

      - name: Setup kubectl (if needed for Kubernetes deployment)
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
        # Устанавливаем kubectl для работы с Kubernetes

      - name: Set Minikube context for kubectl (if needed for Kubernetes deployment)
        run: |
          kubectl config use-context minikube
        # Настроим kubectl для работы с Minikube (если требуется)

      - name: Apply Kubernetes manifests (if using Kubernetes)
        run: |
          kubectl apply -f k8s/
        # Применяем манифесты для деплоя приложения в Kubernetes (если нужно)

      - name: Wait for deployment to complete (if using Kubernetes)
        run: |
          kubectl rollout status deployment flask-app --timeout=300s
        # Ожидаем завершения деплоя приложения в Kubernetes (если нужно)

      - name: Restart application (if needed after deployment)
        run: |
          kubectl rollout restart deployment flask-app
        # Перезапускаем приложение после деплоя в Kubernetes (если нужно)

